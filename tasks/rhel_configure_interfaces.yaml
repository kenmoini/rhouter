---
- name: install needed network manager libs
  yum:
    name:
      - NetworkManager-glib
      - nm-connection-editor
      - libsemanage-python
      - policycoreutils-python
    state: latest

#### WAN

- name: Create WAN Connection - Static, auto DNS
  nmcli:
    conn_name: "{{ wan_interface }}-wan"
    ifname: "{{ wan_interface }}"
    type: ethernet
    ip4: "{{ wan_ip_address }}/{{ wan_cidr }}"
    gw4: "{{ wan_gateway }}"
    state: present
    autoconnect: yes
  when: enable_wan_interface|bool and configure_wan_interface|bool and wan_network_type == "static" and wan_dns == "auto"

- name: Create WAN Connection - Static, manual DNS
  nmcli:
    conn_name: "{{ wan_interface }}-wan"
    ifname: "{{ wan_interface }}"
    type: ethernet
    ip4: "{{ wan_ip_address }}/{{ wan_cidr }}"
    gw4: "{{ wan_gateway }}"
    dns4: "{{ wan_dns_servers }}"
    state: present
    autoconnect: yes
  when: enable_wan_interface|bool and configure_wan_interface|bool and wan_network_type == "static" and wan_dns == "manual"

- name: Create WAN Connection - DHCP, auto DNS
  nmcli:
    conn_name: "{{ wan_interface }}-wan"
    ifname: "{{ wan_interface }}"
    type: ethernet
    state: present
    autoconnect: yes
  when: enable_wan_interface|bool and configure_wan_interface|bool and wan_network_type == "dhcp" and wan_dns == "auto"

- name: Create WAN Connection - DHCP, manual DNS
  nmcli:
    conn_name: "{{ wan_interface }}-wan"
    ifname: "{{ wan_interface }}"
    type: ethernet
    dns4: "{{ wan_dns_servers }}"
    state: present
    autoconnect: yes
  when: enable_wan_interface|bool and configure_wan_interface|bool and wan_network_type == "dhcp" and wan_dns == "manual"

- name: Set WAN Connection Method (Ansible nmcli module bug workaround)
  shell: "nmcli con mod {{ wan_interface }}-wan ipv4.method manual"
  when: enable_wan_interface|bool and configure_wan_interface|bool and wan_network_type == "static"

- name: Set WAN Connection Method (Ansible nmcli module bug workaround)
  shell: "nmcli con mod {{ wan_interface }}-wan ipv4.method auto"
  when: enable_wan_interface|bool and configure_wan_interface|bool and wan_network_type == "dhcp"

- name: Set DNS Manual Method (Ansible nmcli module bug workaround)
  shell: "nmcli con mod {{ wan_interface }}-wan ipv4.ignore-auto-dns yes"
  when: enable_wan_interface|bool and configure_wan_interface|bool and wan_dns == "manual"

- name: Set DNS Manual Method (Ansible nmcli module bug workaround)
  shell: "nmcli con mod {{ wan_interface }}-wan ipv4.ignore-auto-dns no"
  when: enable_wan_interface|bool and configure_wan_interface|bool and wan_dns == "auto"

#### LAN

- name: Create LAN Connection, manual DNS
  nmcli:
    conn_name: "{{ lan_interface }}-lan"
    ifname: "{{ lan_interface }}"
    type: ethernet
    ip4: "{{ lan_ip_address }}/{{ lan_cidr }}"
    gw4: "{{ lan_gateway }}"
    dns4: "{{ lan_dns_servers }}"
    state: present
    autoconnect: yes
  when: enable_lan_interface|bool and configure_lan_interface|bool and lan_network_type == "static" and lan_dns == "manual"

- name: Set LAN Connection Method (Ansible nmcli module bug workaround)
  shell: "nmcli con mod {{ lan_interface }}-lan ipv4.method manual"
  when: enable_lan_interface|bool and configure_lan_interface|bool and lan_network_type == "static"

- name: Set LAN Connection Method (Ansible nmcli module bug workaround)
  shell: "nmcli con mod {{ lan_interface }}-lan ipv4.method auto"
  when: enable_lan_interface|bool and configure_lan_interface|bool and lan_network_type == "dhcp"

- name: Set DNS Manual Method (Ansible nmcli module bug workaround)
  shell: "nmcli con mod {{ lan_interface }}-lan ipv4.ignore-auto-dns yes"
  when: enable_lan_interface|bool and configure_lan_interface|bool and lan_dns == "manual"

#### OPT1

- name: Create OPT1 Connection, manual DNS
  nmcli:
    conn_name: "{{ opt1_interface }}-opt1"
    ifname: "{{ opt1_interface }}"
    type: ethernet
    ip4: "{{ opt1_ip_address }}/{{ opt1_cidr }}"
    gw4: "{{ opt1_gateway }}"
    dns4: "{{ opt1_dns_servers }}"
    state: present
    autoconnect: yes
  when: enable_opt1_interface|bool and configure_opt1_interface|bool and opt1_network_type == "static"

- name: Set OPT1 Connection Method (Ansible nmcli module bug workaround)
  shell: "nmcli con mod {{ opt1_interface }}-opt1 ipv4.method manual"
  when: enable_opt1_interface|bool and configure_opt1_interface|bool and opt1_network_type == "static"

- name: Set OPT1 Connection Method (Ansible nmcli module bug workaround)
  shell: "nmcli con mod {{ opt1_interface }}-opt1 ipv4.method auto"
  when: enable_opt1_interface|bool and configure_opt1_interface|bool and opt1_network_type == "dhcp"

- name: Set DNS Manual Method (Ansible nmcli module bug workaround)
  shell: "nmcli con mod {{ opt1_interface }}-opt1 ipv4.ignore-auto-dns yes"
  when: enable_opt1_interface|bool and configure_opt1_interface|bool and opt1_dns == "manual"

#### OPT2

- name: Create OPT2 Connection
  nmcli:
    conn_name: "{{ opt2_interface }}-opt2"
    ifname: "{{ opt2_interface }}"
    type: ethernet
    ip4: "{{ opt2_ip_address }}/{{ opt2_cidr }}"
    gw4: "{{ opt2_gateway }}"
    dns4: "{{ opt2_dns_servers }}"
    state: present
    autoconnect: yes
  when: enable_opt2_interface|bool and configure_opt2_interface|bool and opt2_network_type == "static"

- name: Set OPT2 Connection Method (Ansible nmcli module bug workaround)
  shell: "nmcli con mod {{ opt2_interface }}-opt2 ipv4.method manual"
  when: enable_opt2_interface|bool and configure_opt2_interface|bool and opt2_network_type == "static"

- name: Set OPT2 Connection Method (Ansible nmcli module bug workaround)
  shell: "nmcli con mod {{ opt2_interface }}-opt2 ipv4.method auto"
  when: enable_opt2_interface|bool and configure_opt2_interface|bool and opt2_network_type == "dhcp"

- name: Set DNS Manual Method (Ansible nmcli module bug workaround)
  shell: "nmcli con mod {{ opt2_interface }}-opt2 ipv4.ignore-auto-dns yes"
  when: enable_opt2_interface|bool and configure_opt2_interface|bool and opt2_dns == "manual"